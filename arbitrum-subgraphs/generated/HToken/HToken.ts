// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AddressUpdated extends ethereum.Event {
  get params(): AddressUpdated__Params {
    return new AddressUpdated__Params(this);
  }
}

export class AddressUpdated__Params {
  _event: AddressUpdated;

  constructor(event: AddressUpdated) {
    this._event = event;
  }

  get _oldAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _newAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _target(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class AdminCommissionsWithdrawn extends ethereum.Event {
  get params(): AdminCommissionsWithdrawn__Params {
    return new AdminCommissionsWithdrawn__Params(this);
  }
}

export class AdminCommissionsWithdrawn__Params {
  _event: AdminCommissionsWithdrawn;

  constructor(event: AdminCommissionsWithdrawn) {
    this._event = event;
  }

  get _amount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ApprovalForAll extends ethereum.Event {
  get params(): ApprovalForAll__Params {
    return new ApprovalForAll__Params(this);
  }
}

export class ApprovalForAll__Params {
  _event: ApprovalForAll;

  constructor(event: ApprovalForAll) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get approved(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class Borrow extends ethereum.Event {
  get params(): Borrow__Params {
    return new Borrow__Params(this);
  }
}

export class Borrow__Params {
  _event: Borrow;

  constructor(event: Borrow) {
    this._event = event;
  }

  get _borrower(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _borrowAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _totalBorrows(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class BorrowFeesWithdrawn extends ethereum.Event {
  get params(): BorrowFeesWithdrawn__Params {
    return new BorrowFeesWithdrawn__Params(this);
  }
}

export class BorrowFeesWithdrawn__Params {
  _event: BorrowFeesWithdrawn;

  constructor(event: BorrowFeesWithdrawn) {
    this._event = event;
  }

  get _amount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _referralFees(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class BorrowLiquidated extends ethereum.Event {
  get params(): BorrowLiquidated__Params {
    return new BorrowLiquidated__Params(this);
  }
}

export class BorrowLiquidated__Params {
  _event: BorrowLiquidated;

  constructor(event: BorrowLiquidated) {
    this._event = event;
  }

  get _initiator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _liquidator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _owner(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _collateralId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class BorrowReferred extends ethereum.Event {
  get params(): BorrowReferred__Params {
    return new BorrowReferred__Params(this);
  }
}

export class BorrowReferred__Params {
  _event: BorrowReferred;

  constructor(event: BorrowReferred) {
    this._event = event;
  }

  get _initiator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _referrer(): string {
    return this._event.parameters[1].value.toString();
  }

  get _amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _fee(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class CollateralDeposited extends ethereum.Event {
  get params(): CollateralDeposited__Params {
    return new CollateralDeposited__Params(this);
  }
}

export class CollateralDeposited__Params {
  _event: CollateralDeposited;

  constructor(event: CollateralDeposited) {
    this._event = event;
  }

  get _initiator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _collateralId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _couponId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class CollateralWithdrawn extends ethereum.Event {
  get params(): CollateralWithdrawn__Params {
    return new CollateralWithdrawn__Params(this);
  }
}

export class CollateralWithdrawn__Params {
  _event: CollateralWithdrawn;

  constructor(event: CollateralWithdrawn) {
    this._event = event;
  }

  get _initiator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _collateralId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class InterestAccrued extends ethereum.Event {
  get params(): InterestAccrued__Params {
    return new InterestAccrued__Params(this);
  }
}

export class InterestAccrued__Params {
  _event: InterestAccrued;

  constructor(event: InterestAccrued) {
    this._event = event;
  }

  get _interestAccumulated(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _interestIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _totalBorrows(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class LiquidationClosed extends ethereum.Event {
  get params(): LiquidationClosed__Params {
    return new LiquidationClosed__Params(this);
  }
}

export class LiquidationClosed__Params {
  _event: LiquidationClosed;

  constructor(event: LiquidationClosed) {
    this._event = event;
  }

  get _initiator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _borrower(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _collateralId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _borrowAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class ProtocolCommissionsWithdrawn extends ethereum.Event {
  get params(): ProtocolCommissionsWithdrawn__Params {
    return new ProtocolCommissionsWithdrawn__Params(this);
  }
}

export class ProtocolCommissionsWithdrawn__Params {
  _event: ProtocolCommissionsWithdrawn;

  constructor(event: ProtocolCommissionsWithdrawn) {
    this._event = event;
  }

  get _amount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ProtocolFeesUpdated extends ethereum.Event {
  get params(): ProtocolFeesUpdated__Params {
    return new ProtocolFeesUpdated__Params(this);
  }
}

export class ProtocolFeesUpdated__Params {
  _event: ProtocolFeesUpdated;

  constructor(event: ProtocolFeesUpdated) {
    this._event = event;
  }

  get _oldProtocolCommission(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _newProtocolCommission(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _oldAdminCommission(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _newAdminCommission(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get _oldReserveFactor(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get _newReserveFactor(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class Redeem extends ethereum.Event {
  get params(): Redeem__Params {
    return new Redeem__Params(this);
  }
}

export class Redeem__Params {
  _event: Redeem;

  constructor(event: Redeem) {
    this._event = event;
  }

  get _initiator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _redeemAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _tokensWithdrawn(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _totalHTokenSupply(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class RepayBorrow extends ethereum.Event {
  get params(): RepayBorrow__Params {
    return new RepayBorrow__Params(this);
  }
}

export class RepayBorrow__Params {
  _event: RepayBorrow;

  constructor(event: RepayBorrow) {
    this._event = event;
  }

  get _payer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _borrower(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _repayAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _accountBorrows(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get _totalBorrows(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get _collateralId(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class ReservesAdded extends ethereum.Event {
  get params(): ReservesAdded__Params {
    return new ReservesAdded__Params(this);
  }
}

export class ReservesAdded__Params {
  _event: ReservesAdded;

  constructor(event: ReservesAdded) {
    this._event = event;
  }

  get _supplier(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _addAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _newTotalReserves(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ReservesReduced extends ethereum.Event {
  get params(): ReservesReduced__Params {
    return new ReservesReduced__Params(this);
  }
}

export class ReservesReduced__Params {
  _event: ReservesReduced;

  constructor(event: ReservesReduced) {
    this._event = event;
  }

  get _supplier(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _reduceAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _newTotalReserves(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class HTokenRoleAdminChanged extends ethereum.Event {
  get params(): HTokenRoleAdminChanged__Params {
    return new HTokenRoleAdminChanged__Params(this);
  }
}

export class HTokenRoleAdminChanged__Params {
  _event: HTokenRoleAdminChanged;

  constructor(event: HTokenRoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class HTokenRoleGranted extends ethereum.Event {
  get params(): HTokenRoleGranted__Params {
    return new HTokenRoleGranted__Params(this);
  }
}

export class HTokenRoleGranted__Params {
  _event: HTokenRoleGranted;

  constructor(event: HTokenRoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class HTokenRoleRevoked extends ethereum.Event {
  get params(): HTokenRoleRevoked__Params {
    return new HTokenRoleRevoked__Params(this);
  }
}

export class HTokenRoleRevoked__Params {
  _event: HTokenRoleRevoked;

  constructor(event: HTokenRoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class TransferBatch extends ethereum.Event {
  get params(): TransferBatch__Params {
    return new TransferBatch__Params(this);
  }
}

export class TransferBatch__Params {
  _event: TransferBatch;

  constructor(event: TransferBatch) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get ids(): Array<BigInt> {
    return this._event.parameters[3].value.toBigIntArray();
  }

  get values(): Array<BigInt> {
    return this._event.parameters[4].value.toBigIntArray();
  }
}

export class TransferSingle extends ethereum.Event {
  get params(): TransferSingle__Params {
    return new TransferSingle__Params(this);
  }
}

export class TransferSingle__Params {
  _event: TransferSingle;

  constructor(event: TransferSingle) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get id(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get value(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class URI extends ethereum.Event {
  get params(): URI__Params {
    return new URI__Params(this);
  }
}

export class URI__Params {
  _event: URI;

  constructor(event: URI) {
    this._event = event;
  }

  get value(): string {
    return this._event.parameters[0].value.toString();
  }

  get id(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class UnderlyingDeposited extends ethereum.Event {
  get params(): UnderlyingDeposited__Params {
    return new UnderlyingDeposited__Params(this);
  }
}

export class UnderlyingDeposited__Params {
  _event: UnderlyingDeposited;

  constructor(event: UnderlyingDeposited) {
    this._event = event;
  }

  get _initiator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _tokensToMint(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get _totalhTokenSupply(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class Withdraw extends ethereum.Event {
  get params(): Withdraw__Params {
    return new Withdraw__Params(this);
  }
}

export class Withdraw__Params {
  _event: Withdraw;

  constructor(event: Withdraw) {
    this._event = event;
  }

  get _initiator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _redeemAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _tokensWithdrawn(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _totalHTokenSupply(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class HToken__borrowCouponsResult {
  value0: BigInt;
  value1: i32;
  value2: Address;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;

  constructor(
    value0: BigInt,
    value1: i32,
    value2: Address,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set(
      "value1",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value1))
    );
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    return map;
  }

  getId(): BigInt {
    return this.value0;
  }

  getActive(): i32 {
    return this.value1;
  }

  getOwner(): Address {
    return this.value2;
  }

  getCollateralId(): BigInt {
    return this.value3;
  }

  getBorrowAmount(): BigInt {
    return this.value4;
  }

  getDebtShares(): BigInt {
    return this.value5;
  }
}

export class HToken__collateralPerBorrowCouponIdResult {
  value0: BigInt;
  value1: boolean;

  constructor(value0: BigInt, value1: boolean) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    return map;
  }

  getCollateralId(): BigInt {
    return this.value0;
  }

  getActive(): boolean {
    return this.value1;
  }
}

export class HToken__getAccountSnapshotResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }

  getValue2(): BigInt {
    return this.value2;
  }
}

export class HToken__getAddressesResult {
  value0: Address;
  value1: Address;
  value2: Address;
  value3: Address;
  value4: Address;
  value5: Address;
  value6: Address;
  value7: Address;

  constructor(
    value0: Address,
    value1: Address,
    value2: Address,
    value3: Address,
    value4: Address,
    value5: Address,
    value6: Address,
    value7: Address
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    map.set("value4", ethereum.Value.fromAddress(this.value4));
    map.set("value5", ethereum.Value.fromAddress(this.value5));
    map.set("value6", ethereum.Value.fromAddress(this.value6));
    map.set("value7", ethereum.Value.fromAddress(this.value7));
    return map;
  }

  getValue0(): Address {
    return this.value0;
  }

  getValue1(): Address {
    return this.value1;
  }

  getValue2(): Address {
    return this.value2;
  }

  getValue3(): Address {
    return this.value3;
  }

  getValue4(): Address {
    return this.value4;
  }

  getValue5(): Address {
    return this.value5;
  }

  getValue6(): Address {
    return this.value6;
  }

  getValue7(): Address {
    return this.value7;
  }
}

export class HToken__getProtocolFeesResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }

  getValue2(): BigInt {
    return this.value2;
  }

  getValue3(): BigInt {
    return this.value3;
  }

  getValue4(): BigInt {
    return this.value4;
  }
}

export class HToken__getSpecificCouponByCollateralIdResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get active(): i32 {
    return this[1].toI32();
  }

  get owner(): Address {
    return this[2].toAddress();
  }

  get collateralId(): BigInt {
    return this[3].toBigInt();
  }

  get borrowAmount(): BigInt {
    return this[4].toBigInt();
  }

  get debtShares(): BigInt {
    return this[5].toBigInt();
  }
}

export class HToken extends ethereum.SmartContract {
  static bind(address: Address): HToken {
    return new HToken("HToken", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  LIQUIDATOR_ROLE(): Bytes {
    let result = super.call(
      "LIQUIDATOR_ROLE",
      "LIQUIDATOR_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_LIQUIDATOR_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "LIQUIDATOR_ROLE",
      "LIQUIDATOR_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  MARKET_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "MARKET_ADMIN_ROLE",
      "MARKET_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_MARKET_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "MARKET_ADMIN_ROLE",
      "MARKET_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  SUPPLIER_ROLE(): Bytes {
    let result = super.call("SUPPLIER_ROLE", "SUPPLIER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_SUPPLIER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "SUPPLIER_ROLE",
      "SUPPLIER_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  accrualBlockNumber(): BigInt {
    let result = super.call(
      "accrualBlockNumber",
      "accrualBlockNumber():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_accrualBlockNumber(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "accrualBlockNumber",
      "accrualBlockNumber():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  balanceOf(account: Address, id: BigInt): BigInt {
    let result = super.call(
      "balanceOf",
      "balanceOf(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromUnsignedBigInt(id)
      ]
    );

    return result[0].toBigInt();
  }

  try_balanceOf(account: Address, id: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "balanceOf",
      "balanceOf(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromUnsignedBigInt(id)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  balanceOfBatch(accounts: Array<Address>, ids: Array<BigInt>): Array<BigInt> {
    let result = super.call(
      "balanceOfBatch",
      "balanceOfBatch(address[],uint256[]):(uint256[])",
      [
        ethereum.Value.fromAddressArray(accounts),
        ethereum.Value.fromUnsignedBigIntArray(ids)
      ]
    );

    return result[0].toBigIntArray();
  }

  try_balanceOfBatch(
    accounts: Array<Address>,
    ids: Array<BigInt>
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "balanceOfBatch",
      "balanceOfBatch(address[],uint256[]):(uint256[])",
      [
        ethereum.Value.fromAddressArray(accounts),
        ethereum.Value.fromUnsignedBigIntArray(ids)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  borrowCoupons(param0: BigInt): HToken__borrowCouponsResult {
    let result = super.call(
      "borrowCoupons",
      "borrowCoupons(uint256):(uint32,uint8,address,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new HToken__borrowCouponsResult(
      result[0].toBigInt(),
      result[1].toI32(),
      result[2].toAddress(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt()
    );
  }

  try_borrowCoupons(
    param0: BigInt
  ): ethereum.CallResult<HToken__borrowCouponsResult> {
    let result = super.tryCall(
      "borrowCoupons",
      "borrowCoupons(uint256):(uint32,uint8,address,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new HToken__borrowCouponsResult(
        value[0].toBigInt(),
        value[1].toI32(),
        value[2].toAddress(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt()
      )
    );
  }

  borrowRatePerBlock(): BigInt {
    let result = super.call(
      "borrowRatePerBlock",
      "borrowRatePerBlock():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_borrowRatePerBlock(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "borrowRatePerBlock",
      "borrowRatePerBlock():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  collateralPerBorrowCouponId(
    param0: BigInt
  ): HToken__collateralPerBorrowCouponIdResult {
    let result = super.call(
      "collateralPerBorrowCouponId",
      "collateralPerBorrowCouponId(uint256):(uint256,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new HToken__collateralPerBorrowCouponIdResult(
      result[0].toBigInt(),
      result[1].toBoolean()
    );
  }

  try_collateralPerBorrowCouponId(
    param0: BigInt
  ): ethereum.CallResult<HToken__collateralPerBorrowCouponIdResult> {
    let result = super.tryCall(
      "collateralPerBorrowCouponId",
      "collateralPerBorrowCouponId(uint256):(uint256,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new HToken__collateralPerBorrowCouponIdResult(
        value[0].toBigInt(),
        value[1].toBoolean()
      )
    );
  }

  collateralToken(): Address {
    let result = super.call(
      "collateralToken",
      "collateralToken():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_collateralToken(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "collateralToken",
      "collateralToken():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  decimals(): i32 {
    let result = super.call("decimals", "decimals():(uint8)", []);

    return result[0].toI32();
  }

  try_decimals(): ethereum.CallResult<i32> {
    let result = super.tryCall("decimals", "decimals():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  exchangeRateStored(): BigInt {
    let result = super.call(
      "exchangeRateStored",
      "exchangeRateStored():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_exchangeRateStored(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "exchangeRateStored",
      "exchangeRateStored():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAccountSnapshot(_account: Address): HToken__getAccountSnapshotResult {
    let result = super.call(
      "getAccountSnapshot",
      "getAccountSnapshot(address):(uint256,uint256,uint256)",
      [ethereum.Value.fromAddress(_account)]
    );

    return new HToken__getAccountSnapshotResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt()
    );
  }

  try_getAccountSnapshot(
    _account: Address
  ): ethereum.CallResult<HToken__getAccountSnapshotResult> {
    let result = super.tryCall(
      "getAccountSnapshot",
      "getAccountSnapshot(address):(uint256,uint256,uint256)",
      [ethereum.Value.fromAddress(_account)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new HToken__getAccountSnapshotResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt()
      )
    );
  }

  getAddresses(): HToken__getAddressesResult {
    let result = super.call(
      "getAddresses",
      "getAddresses():(address,address,address,address,address,address,address,address)",
      []
    );

    return new HToken__getAddressesResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toAddress(),
      result[3].toAddress(),
      result[4].toAddress(),
      result[5].toAddress(),
      result[6].toAddress(),
      result[7].toAddress()
    );
  }

  try_getAddresses(): ethereum.CallResult<HToken__getAddressesResult> {
    let result = super.tryCall(
      "getAddresses",
      "getAddresses():(address,address,address,address,address,address,address,address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new HToken__getAddressesResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toAddress(),
        value[3].toAddress(),
        value[4].toAddress(),
        value[5].toAddress(),
        value[6].toAddress(),
        value[7].toAddress()
      )
    );
  }

  getCashPrior(): BigInt {
    let result = super.call("getCashPrior", "getCashPrior():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getCashPrior(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getCashPrior", "getCashPrior():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getDebt(): BigInt {
    let result = super.call("getDebt", "getDebt():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getDebt(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getDebt", "getDebt():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getDebtForCollateral(_collateralId: BigInt): BigInt {
    let result = super.call(
      "getDebtForCollateral",
      "getDebtForCollateral(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_collateralId)]
    );

    return result[0].toBigInt();
  }

  try_getDebtForCollateral(_collateralId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getDebtForCollateral",
      "getDebtForCollateral(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_collateralId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getDebtForCoupon(_couponId: BigInt): BigInt {
    let result = super.call(
      "getDebtForCoupon",
      "getDebtForCoupon(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_couponId)]
    );

    return result[0].toBigInt();
  }

  try_getDebtForCoupon(_couponId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getDebtForCoupon",
      "getDebtForCoupon(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_couponId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getProtocolFees(): HToken__getProtocolFeesResult {
    let result = super.call(
      "getProtocolFees",
      "getProtocolFees():(uint256,uint256,uint256,uint256,uint256)",
      []
    );

    return new HToken__getProtocolFeesResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt()
    );
  }

  try_getProtocolFees(): ethereum.CallResult<HToken__getProtocolFeesResult> {
    let result = super.tryCall(
      "getProtocolFees",
      "getProtocolFees():(uint256,uint256,uint256,uint256,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new HToken__getProtocolFeesResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt()
      )
    );
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getSpecificCouponByCollateralId(
    _collateralId: BigInt
  ): HToken__getSpecificCouponByCollateralIdResultValue0Struct {
    let result = super.call(
      "getSpecificCouponByCollateralId",
      "getSpecificCouponByCollateralId(uint256):((uint32,uint8,address,uint256,uint256,uint256))",
      [ethereum.Value.fromUnsignedBigInt(_collateralId)]
    );

    return changetype<
      HToken__getSpecificCouponByCollateralIdResultValue0Struct
    >(result[0].toTuple());
  }

  try_getSpecificCouponByCollateralId(
    _collateralId: BigInt
  ): ethereum.CallResult<
    HToken__getSpecificCouponByCollateralIdResultValue0Struct
  > {
    let result = super.tryCall(
      "getSpecificCouponByCollateralId",
      "getSpecificCouponByCollateralId(uint256):((uint32,uint8,address,uint256,uint256,uint256))",
      [ethereum.Value.fromUnsignedBigInt(_collateralId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<HToken__getSpecificCouponByCollateralIdResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  idCounter(): BigInt {
    let result = super.call("idCounter", "idCounter():(uint256)", []);

    return result[0].toBigInt();
  }

  try_idCounter(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("idCounter", "idCounter():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  interestIndex(): BigInt {
    let result = super.call("interestIndex", "interestIndex():(uint256)", []);

    return result[0].toBigInt();
  }

  try_interestIndex(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "interestIndex",
      "interestIndex():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  interestIndexStored(): BigInt {
    let result = super.call(
      "interestIndexStored",
      "interestIndexStored():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_interestIndexStored(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "interestIndexStored",
      "interestIndexStored():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isApprovedForAll(account: Address, operator: Address): boolean {
    let result = super.call(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromAddress(operator)
      ]
    );

    return result[0].toBoolean();
  }

  try_isApprovedForAll(
    account: Address,
    operator: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromAddress(operator)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  onERC721Received(
    param0: Address,
    param1: Address,
    param2: BigInt,
    param3: Bytes
  ): Bytes {
    let result = super.call(
      "onERC721Received",
      "onERC721Received(address,address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2),
        ethereum.Value.fromBytes(param3)
      ]
    );

    return result[0].toBytes();
  }

  try_onERC721Received(
    param0: Address,
    param1: Address,
    param2: BigInt,
    param3: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC721Received",
      "onERC721Received(address,address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2),
        ethereum.Value.fromBytes(param3)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  sharesBalancePerUser(param0: Address): BigInt {
    let result = super.call(
      "sharesBalancePerUser",
      "sharesBalancePerUser(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_sharesBalancePerUser(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "sharesBalancePerUser",
      "sharesBalancePerUser(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  supportsInterface(_interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(_interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(_interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(_interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  totalAdminCommission(): BigInt {
    let result = super.call(
      "totalAdminCommission",
      "totalAdminCommission():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_totalAdminCommission(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalAdminCommission",
      "totalAdminCommission():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalBorrowFees(): BigInt {
    let result = super.call(
      "totalBorrowFees",
      "totalBorrowFees():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_totalBorrowFees(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalBorrowFees",
      "totalBorrowFees():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalBorrows(): BigInt {
    let result = super.call("totalBorrows", "totalBorrows():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalBorrows(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalBorrows", "totalBorrows():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalProtocolCommission(): BigInt {
    let result = super.call(
      "totalProtocolCommission",
      "totalProtocolCommission():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_totalProtocolCommission(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalProtocolCommission",
      "totalProtocolCommission():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalReferredBorrowFees(): BigInt {
    let result = super.call(
      "totalReferredBorrowFees",
      "totalReferredBorrowFees():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_totalReferredBorrowFees(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalReferredBorrowFees",
      "totalReferredBorrowFees():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalReserves(): BigInt {
    let result = super.call("totalReserves", "totalReserves():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalReserves(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalReserves",
      "totalReserves():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalShares(): BigInt {
    let result = super.call("totalShares", "totalShares():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalShares(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalShares", "totalShares():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalSupply(): BigInt {
    let result = super.call("totalSupply", "totalSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalSupply", "totalSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  underlyingToken(): Address {
    let result = super.call(
      "underlyingToken",
      "underlyingToken():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_underlyingToken(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "underlyingToken",
      "underlyingToken():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  uri(_id: BigInt): string {
    let result = super.call("uri", "uri(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_id)
    ]);

    return result[0].toString();
  }

  try_uri(_id: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("uri", "uri(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_id)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  userToCoupons(param0: Address): BigInt {
    let result = super.call(
      "userToCoupons",
      "userToCoupons(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_userToCoupons(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "userToCoupons",
      "userToCoupons(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  version(): BigInt {
    let result = super.call("version", "version():(uint256)", []);

    return result[0].toBigInt();
  }

  try_version(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("version", "version():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _underlyingToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _collateralToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _controller(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _interestRateModel(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _liquidator(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _initialExchangeRateMantissa(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _adminCommissionReceiver(): Address {
    return this._call.inputValues[6].value.toAddress();
  }

  get _protocolCommissionReceiver(): Address {
    return this._call.inputValues[7].value.toAddress();
  }

  get _roleReceiver(): Address {
    return this._call.inputValues[8].value.toAddress();
  }

  get _name(): string {
    return this._call.inputValues[9].value.toString();
  }

  get _symbol(): string {
    return this._call.inputValues[10].value.toString();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class _modifyReservesCall extends ethereum.Call {
  get inputs(): _modifyReservesCall__Inputs {
    return new _modifyReservesCall__Inputs(this);
  }

  get outputs(): _modifyReservesCall__Outputs {
    return new _modifyReservesCall__Outputs(this);
  }
}

export class _modifyReservesCall__Inputs {
  _call: _modifyReservesCall;

  constructor(call: _modifyReservesCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _add(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class _modifyReservesCall__Outputs {
  _call: _modifyReservesCall;

  constructor(call: _modifyReservesCall) {
    this._call = call;
  }
}

export class _setAddressCall extends ethereum.Call {
  get inputs(): _setAddressCall__Inputs {
    return new _setAddressCall__Inputs(this);
  }

  get outputs(): _setAddressCall__Outputs {
    return new _setAddressCall__Outputs(this);
  }
}

export class _setAddressCall__Inputs {
  _call: _setAddressCall;

  constructor(call: _setAddressCall) {
    this._call = call;
  }

  get _newAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _target(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class _setAddressCall__Outputs {
  _call: _setAddressCall;

  constructor(call: _setAddressCall) {
    this._call = call;
  }
}

export class _setAddressMarketAdminCall extends ethereum.Call {
  get inputs(): _setAddressMarketAdminCall__Inputs {
    return new _setAddressMarketAdminCall__Inputs(this);
  }

  get outputs(): _setAddressMarketAdminCall__Outputs {
    return new _setAddressMarketAdminCall__Outputs(this);
  }
}

export class _setAddressMarketAdminCall__Inputs {
  _call: _setAddressMarketAdminCall;

  constructor(call: _setAddressMarketAdminCall) {
    this._call = call;
  }

  get _newAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _target(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class _setAddressMarketAdminCall__Outputs {
  _call: _setAddressMarketAdminCall;

  constructor(call: _setAddressMarketAdminCall) {
    this._call = call;
  }
}

export class _setAdminCommissionCall extends ethereum.Call {
  get inputs(): _setAdminCommissionCall__Inputs {
    return new _setAdminCommissionCall__Inputs(this);
  }

  get outputs(): _setAdminCommissionCall__Outputs {
    return new _setAdminCommissionCall__Outputs(this);
  }
}

export class _setAdminCommissionCall__Inputs {
  _call: _setAdminCommissionCall;

  constructor(call: _setAdminCommissionCall) {
    this._call = call;
  }

  get _newAdminCommissionMantissa(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class _setAdminCommissionCall__Outputs {
  _call: _setAdminCommissionCall;

  constructor(call: _setAdminCommissionCall) {
    this._call = call;
  }
}

export class _setProtocolFeesCall extends ethereum.Call {
  get inputs(): _setProtocolFeesCall__Inputs {
    return new _setProtocolFeesCall__Inputs(this);
  }

  get outputs(): _setProtocolFeesCall__Outputs {
    return new _setProtocolFeesCall__Outputs(this);
  }
}

export class _setProtocolFeesCall__Inputs {
  _call: _setProtocolFeesCall;

  constructor(call: _setProtocolFeesCall) {
    this._call = call;
  }

  get _newProtocolCommissionMantissa(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _newReserveFactorMantissa(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class _setProtocolFeesCall__Outputs {
  _call: _setProtocolFeesCall;

  constructor(call: _setProtocolFeesCall) {
    this._call = call;
  }
}

export class _withdrawAdminCommissionsCall extends ethereum.Call {
  get inputs(): _withdrawAdminCommissionsCall__Inputs {
    return new _withdrawAdminCommissionsCall__Inputs(this);
  }

  get outputs(): _withdrawAdminCommissionsCall__Outputs {
    return new _withdrawAdminCommissionsCall__Outputs(this);
  }
}

export class _withdrawAdminCommissionsCall__Inputs {
  _call: _withdrawAdminCommissionsCall;

  constructor(call: _withdrawAdminCommissionsCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class _withdrawAdminCommissionsCall__Outputs {
  _call: _withdrawAdminCommissionsCall;

  constructor(call: _withdrawAdminCommissionsCall) {
    this._call = call;
  }
}

export class _withdrawBorrowFeesCall extends ethereum.Call {
  get inputs(): _withdrawBorrowFeesCall__Inputs {
    return new _withdrawBorrowFeesCall__Inputs(this);
  }

  get outputs(): _withdrawBorrowFeesCall__Outputs {
    return new _withdrawBorrowFeesCall__Outputs(this);
  }
}

export class _withdrawBorrowFeesCall__Inputs {
  _call: _withdrawBorrowFeesCall;

  constructor(call: _withdrawBorrowFeesCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _referralFees(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class _withdrawBorrowFeesCall__Outputs {
  _call: _withdrawBorrowFeesCall;

  constructor(call: _withdrawBorrowFeesCall) {
    this._call = call;
  }
}

export class _withdrawProtocolCommissionsCall extends ethereum.Call {
  get inputs(): _withdrawProtocolCommissionsCall__Inputs {
    return new _withdrawProtocolCommissionsCall__Inputs(this);
  }

  get outputs(): _withdrawProtocolCommissionsCall__Outputs {
    return new _withdrawProtocolCommissionsCall__Outputs(this);
  }
}

export class _withdrawProtocolCommissionsCall__Inputs {
  _call: _withdrawProtocolCommissionsCall;

  constructor(call: _withdrawProtocolCommissionsCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class _withdrawProtocolCommissionsCall__Outputs {
  _call: _withdrawProtocolCommissionsCall;

  constructor(call: _withdrawProtocolCommissionsCall) {
    this._call = call;
  }
}

export class AccrueInterestCall extends ethereum.Call {
  get inputs(): AccrueInterestCall__Inputs {
    return new AccrueInterestCall__Inputs(this);
  }

  get outputs(): AccrueInterestCall__Outputs {
    return new AccrueInterestCall__Outputs(this);
  }
}

export class AccrueInterestCall__Inputs {
  _call: AccrueInterestCall;

  constructor(call: AccrueInterestCall) {
    this._call = call;
  }
}

export class AccrueInterestCall__Outputs {
  _call: AccrueInterestCall;

  constructor(call: AccrueInterestCall) {
    this._call = call;
  }
}

export class BorrowCall extends ethereum.Call {
  get inputs(): BorrowCall__Inputs {
    return new BorrowCall__Inputs(this);
  }

  get outputs(): BorrowCall__Outputs {
    return new BorrowCall__Outputs(this);
  }
}

export class BorrowCall__Inputs {
  _call: BorrowCall;

  constructor(call: BorrowCall) {
    this._call = call;
  }

  get _borrowAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _collateralId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class BorrowCall__Outputs {
  _call: BorrowCall;

  constructor(call: BorrowCall) {
    this._call = call;
  }
}

export class BorrowReferredCall extends ethereum.Call {
  get inputs(): BorrowReferredCall__Inputs {
    return new BorrowReferredCall__Inputs(this);
  }

  get outputs(): BorrowReferredCall__Outputs {
    return new BorrowReferredCall__Outputs(this);
  }
}

export class BorrowReferredCall__Inputs {
  _call: BorrowReferredCall;

  constructor(call: BorrowReferredCall) {
    this._call = call;
  }

  get _borrowAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _collateralId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _referral(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _signature(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class BorrowReferredCall__Outputs {
  _call: BorrowReferredCall;

  constructor(call: BorrowReferredCall) {
    this._call = call;
  }
}

export class CloseoutLiquidationCall extends ethereum.Call {
  get inputs(): CloseoutLiquidationCall__Inputs {
    return new CloseoutLiquidationCall__Inputs(this);
  }

  get outputs(): CloseoutLiquidationCall__Outputs {
    return new CloseoutLiquidationCall__Outputs(this);
  }
}

export class CloseoutLiquidationCall__Inputs {
  _call: CloseoutLiquidationCall;

  constructor(call: CloseoutLiquidationCall) {
    this._call = call;
  }

  get _borrower(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _collateralId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class CloseoutLiquidationCall__Outputs {
  _call: CloseoutLiquidationCall;

  constructor(call: CloseoutLiquidationCall) {
    this._call = call;
  }
}

export class DepositCollateralCall extends ethereum.Call {
  get inputs(): DepositCollateralCall__Inputs {
    return new DepositCollateralCall__Inputs(this);
  }

  get outputs(): DepositCollateralCall__Outputs {
    return new DepositCollateralCall__Outputs(this);
  }
}

export class DepositCollateralCall__Inputs {
  _call: DepositCollateralCall;

  constructor(call: DepositCollateralCall) {
    this._call = call;
  }

  get _collateralIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class DepositCollateralCall__Outputs {
  _call: DepositCollateralCall;

  constructor(call: DepositCollateralCall) {
    this._call = call;
  }
}

export class DepositUnderlyingCall extends ethereum.Call {
  get inputs(): DepositUnderlyingCall__Inputs {
    return new DepositUnderlyingCall__Inputs(this);
  }

  get outputs(): DepositUnderlyingCall__Outputs {
    return new DepositUnderlyingCall__Outputs(this);
  }
}

export class DepositUnderlyingCall__Inputs {
  _call: DepositUnderlyingCall;

  constructor(call: DepositUnderlyingCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class DepositUnderlyingCall__Outputs {
  _call: DepositUnderlyingCall;

  constructor(call: DepositUnderlyingCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class LiquidateBorrowCall extends ethereum.Call {
  get inputs(): LiquidateBorrowCall__Inputs {
    return new LiquidateBorrowCall__Inputs(this);
  }

  get outputs(): LiquidateBorrowCall__Outputs {
    return new LiquidateBorrowCall__Outputs(this);
  }
}

export class LiquidateBorrowCall__Inputs {
  _call: LiquidateBorrowCall;

  constructor(call: LiquidateBorrowCall) {
    this._call = call;
  }

  get _collateralId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class LiquidateBorrowCall__Outputs {
  _call: LiquidateBorrowCall;

  constructor(call: LiquidateBorrowCall) {
    this._call = call;
  }
}

export class OnERC721ReceivedCall extends ethereum.Call {
  get inputs(): OnERC721ReceivedCall__Inputs {
    return new OnERC721ReceivedCall__Inputs(this);
  }

  get outputs(): OnERC721ReceivedCall__Outputs {
    return new OnERC721ReceivedCall__Outputs(this);
  }
}

export class OnERC721ReceivedCall__Inputs {
  _call: OnERC721ReceivedCall;

  constructor(call: OnERC721ReceivedCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get value2(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get value3(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class OnERC721ReceivedCall__Outputs {
  _call: OnERC721ReceivedCall;

  constructor(call: OnERC721ReceivedCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class RedeemCall extends ethereum.Call {
  get inputs(): RedeemCall__Inputs {
    return new RedeemCall__Inputs(this);
  }

  get outputs(): RedeemCall__Outputs {
    return new RedeemCall__Outputs(this);
  }
}

export class RedeemCall__Inputs {
  _call: RedeemCall;

  constructor(call: RedeemCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RedeemCall__Outputs {
  _call: RedeemCall;

  constructor(call: RedeemCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RepayBorrowCall extends ethereum.Call {
  get inputs(): RepayBorrowCall__Inputs {
    return new RepayBorrowCall__Inputs(this);
  }

  get outputs(): RepayBorrowCall__Outputs {
    return new RepayBorrowCall__Outputs(this);
  }
}

export class RepayBorrowCall__Inputs {
  _call: RepayBorrowCall;

  constructor(call: RepayBorrowCall) {
    this._call = call;
  }

  get _repayAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _collateralId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _owner(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class RepayBorrowCall__Outputs {
  _call: RepayBorrowCall;

  constructor(call: RepayBorrowCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SafeBatchTransferFromCall extends ethereum.Call {
  get inputs(): SafeBatchTransferFromCall__Inputs {
    return new SafeBatchTransferFromCall__Inputs(this);
  }

  get outputs(): SafeBatchTransferFromCall__Outputs {
    return new SafeBatchTransferFromCall__Outputs(this);
  }
}

export class SafeBatchTransferFromCall__Inputs {
  _call: SafeBatchTransferFromCall;

  constructor(call: SafeBatchTransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get ids(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get amounts(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get data(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class SafeBatchTransferFromCall__Outputs {
  _call: SafeBatchTransferFromCall;

  constructor(call: SafeBatchTransferFromCall) {
    this._call = call;
  }
}

export class SafeTransferFromCall extends ethereum.Call {
  get inputs(): SafeTransferFromCall__Inputs {
    return new SafeTransferFromCall__Inputs(this);
  }

  get outputs(): SafeTransferFromCall__Outputs {
    return new SafeTransferFromCall__Outputs(this);
  }
}

export class SafeTransferFromCall__Inputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get id(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class SafeTransferFromCall__Outputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }
}

export class SetApprovalForAllCall extends ethereum.Call {
  get inputs(): SetApprovalForAllCall__Inputs {
    return new SetApprovalForAllCall__Inputs(this);
  }

  get outputs(): SetApprovalForAllCall__Outputs {
    return new SetApprovalForAllCall__Outputs(this);
  }
}

export class SetApprovalForAllCall__Inputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }

  get operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get approved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetApprovalForAllCall__Outputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }
}

export class SweepTokenCall extends ethereum.Call {
  get inputs(): SweepTokenCall__Inputs {
    return new SweepTokenCall__Inputs(this);
  }

  get outputs(): SweepTokenCall__Outputs {
    return new SweepTokenCall__Outputs(this);
  }
}

export class SweepTokenCall__Inputs {
  _call: SweepTokenCall;

  constructor(call: SweepTokenCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SweepTokenCall__Outputs {
  _call: SweepTokenCall;

  constructor(call: SweepTokenCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}

export class WithdrawCollateralCall extends ethereum.Call {
  get inputs(): WithdrawCollateralCall__Inputs {
    return new WithdrawCollateralCall__Inputs(this);
  }

  get outputs(): WithdrawCollateralCall__Outputs {
    return new WithdrawCollateralCall__Outputs(this);
  }
}

export class WithdrawCollateralCall__Inputs {
  _call: WithdrawCollateralCall;

  constructor(call: WithdrawCollateralCall) {
    this._call = call;
  }

  get _collateralIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class WithdrawCollateralCall__Outputs {
  _call: WithdrawCollateralCall;

  constructor(call: WithdrawCollateralCall) {
    this._call = call;
  }
}
