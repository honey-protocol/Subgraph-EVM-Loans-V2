// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ActionPausedhToken extends ethereum.Event {
  get params(): ActionPausedhToken__Params {
    return new ActionPausedhToken__Params(this);
  }
}

export class ActionPausedhToken__Params {
  _event: ActionPausedhToken;

  constructor(event: ActionPausedhToken) {
    this._event = event;
  }

  get _hToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _action(): string {
    return this._event.parameters[1].value.toString();
  }

  get _pauseState(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class BorrowCapGuardianUpdated extends ethereum.Event {
  get params(): BorrowCapGuardianUpdated__Params {
    return new BorrowCapGuardianUpdated__Params(this);
  }
}

export class BorrowCapGuardianUpdated__Params {
  _event: BorrowCapGuardianUpdated;

  constructor(event: BorrowCapGuardianUpdated) {
    this._event = event;
  }

  get _oldBorrowCapGuardian(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _newBorrowCapGuardian(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class BorrowCapUpdated extends ethereum.Event {
  get params(): BorrowCapUpdated__Params {
    return new BorrowCapUpdated__Params(this);
  }
}

export class BorrowCapUpdated__Params {
  _event: BorrowCapUpdated;

  constructor(event: BorrowCapUpdated) {
    this._event = event;
  }

  get _hToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _newBorrowCap(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class BorrowFeePerMarketUpdated extends ethereum.Event {
  get params(): BorrowFeePerMarketUpdated__Params {
    return new BorrowFeePerMarketUpdated__Params(this);
  }
}

export class BorrowFeePerMarketUpdated__Params {
  _event: BorrowFeePerMarketUpdated;

  constructor(event: BorrowFeePerMarketUpdated) {
    this._event = event;
  }

  get _market(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _fee(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _referralFee(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class CollateralFactorUpdated extends ethereum.Event {
  get params(): CollateralFactorUpdated__Params {
    return new CollateralFactorUpdated__Params(this);
  }
}

export class CollateralFactorUpdated__Params {
  _event: CollateralFactorUpdated;

  constructor(event: CollateralFactorUpdated) {
    this._event = event;
  }

  get _hToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _oldCollateralFactorMantissa(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _newCollateralFactorMantissa(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ControllerPaused extends ethereum.Event {
  get params(): ControllerPaused__Params {
    return new ControllerPaused__Params(this);
  }
}

export class ControllerPaused__Params {
  _event: ControllerPaused;

  constructor(event: ControllerPaused) {
    this._event = event;
  }

  get _paused(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }
}

export class MarketEntered extends ethereum.Event {
  get params(): MarketEntered__Params {
    return new MarketEntered__Params(this);
  }
}

export class MarketEntered__Params {
  _event: MarketEntered;

  constructor(event: MarketEntered) {
    this._event = event;
  }

  get _hToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _account(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class MarketExited extends ethereum.Event {
  get params(): MarketExited__Params {
    return new MarketExited__Params(this);
  }
}

export class MarketExited__Params {
  _event: MarketExited;

  constructor(event: MarketExited) {
    this._event = event;
  }

  get _hToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _account(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class MarketListed extends ethereum.Event {
  get params(): MarketListed__Params {
    return new MarketListed__Params(this);
  }
}

export class MarketListed__Params {
  _event: MarketListed;

  constructor(event: MarketListed) {
    this._event = event;
  }

  get _hToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class MarketRemoved extends ethereum.Event {
  get params(): MarketRemoved__Params {
    return new MarketRemoved__Params(this);
  }
}

export class MarketRemoved__Params {
  _event: MarketRemoved;

  constructor(event: MarketRemoved) {
    this._event = event;
  }

  get _hToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class NewMaxLTVFactor extends ethereum.Event {
  get params(): NewMaxLTVFactor__Params {
    return new NewMaxLTVFactor__Params(this);
  }
}

export class NewMaxLTVFactor__Params {
  _event: NewMaxLTVFactor;

  constructor(event: NewMaxLTVFactor) {
    this._event = event;
  }

  get _hToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _oldMaxLTVFactorMantissa(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _newMaxLTVFactorMantissa(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class PriceOracleUpdated extends ethereum.Event {
  get params(): PriceOracleUpdated__Params {
    return new PriceOracleUpdated__Params(this);
  }
}

export class PriceOracleUpdated__Params {
  _event: PriceOracleUpdated;

  constructor(event: PriceOracleUpdated) {
    this._event = event;
  }

  get _oldPriceOracle(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _newPriceOracle(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ReferralSignerUpdated extends ethereum.Event {
  get params(): ReferralSignerUpdated__Params {
    return new ReferralSignerUpdated__Params(this);
  }
}

export class ReferralSignerUpdated__Params {
  _event: ReferralSignerUpdated;

  constructor(event: ReferralSignerUpdated) {
    this._event = event;
  }

  get _oldSigner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _newSigner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Controller__getBorrowFeePerMarketResult {
  value0: BigInt;
  value1: boolean;

  constructor(value0: BigInt, value1: boolean) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getValue1(): boolean {
    return this.value1;
  }
}

export class Controller__getHypotheticalAccountLiquidityResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getLiquidityTillLiquidation(): BigInt {
    return this.value0;
  }

  getShortfall(): BigInt {
    return this.value1;
  }

  getLiquidityTillLTV(): BigInt {
    return this.value2;
  }
}

export class Controller__getMarketDataResult {
  value0: boolean;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: boolean, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getValue0(): boolean {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }

  getValue2(): BigInt {
    return this.value2;
  }
}

export class Controller__marketPausedInfoResult {
  value0: boolean;
  value1: boolean;
  value2: boolean;
  value3: boolean;
  value4: boolean;
  value5: boolean;
  value6: boolean;

  constructor(
    value0: boolean,
    value1: boolean,
    value2: boolean,
    value3: boolean,
    value4: boolean,
    value5: boolean,
    value6: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    map.set("value2", ethereum.Value.fromBoolean(this.value2));
    map.set("value3", ethereum.Value.fromBoolean(this.value3));
    map.set("value4", ethereum.Value.fromBoolean(this.value4));
    map.set("value5", ethereum.Value.fromBoolean(this.value5));
    map.set("value6", ethereum.Value.fromBoolean(this.value6));
    return map;
  }

  getBorrowPaused(): boolean {
    return this.value0;
  }

  getTransferPaused(): boolean {
    return this.value1;
  }

  getRedeemPaused(): boolean {
    return this.value2;
  }

  getLiquidationPaused(): boolean {
    return this.value3;
  }

  getRepayBorrowPaused(): boolean {
    return this.value4;
  }

  getDepositPaused(): boolean {
    return this.value5;
  }

  getDepositCollateralPaused(): boolean {
    return this.value6;
  }
}

export class Controller extends ethereum.SmartContract {
  static bind(address: Address): Controller {
    return new Controller("Controller", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  FACTORY_ROLE(): Bytes {
    let result = super.call("FACTORY_ROLE", "FACTORY_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_FACTORY_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("FACTORY_ROLE", "FACTORY_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  PAUSER_ROLE(): Bytes {
    let result = super.call("PAUSER_ROLE", "PAUSER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_PAUSER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("PAUSER_ROLE", "PAUSER_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  borrowCaps(param0: Address): BigInt {
    let result = super.call("borrowCaps", "borrowCaps(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_borrowCaps(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("borrowCaps", "borrowCaps(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  borrowFeeCap(): BigInt {
    let result = super.call("borrowFeeCap", "borrowFeeCap():(uint256)", []);

    return result[0].toBigInt();
  }

  try_borrowFeeCap(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("borrowFeeCap", "borrowFeeCap():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  checkMembership(_hToken: Address, _account: Address): boolean {
    let result = super.call(
      "checkMembership",
      "checkMembership(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_hToken),
        ethereum.Value.fromAddress(_account)
      ]
    );

    return result[0].toBoolean();
  }

  try_checkMembership(
    _hToken: Address,
    _account: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "checkMembership",
      "checkMembership(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_hToken),
        ethereum.Value.fromAddress(_account)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  collateralExistsInMarkets(_collateral: Address): boolean {
    let result = super.call(
      "collateralExistsInMarkets",
      "collateralExistsInMarkets(address):(bool)",
      [ethereum.Value.fromAddress(_collateral)]
    );

    return result[0].toBoolean();
  }

  try_collateralExistsInMarkets(
    _collateral: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "collateralExistsInMarkets",
      "collateralExistsInMarkets(address):(bool)",
      [ethereum.Value.fromAddress(_collateral)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getBorrowFeePerMarket(
    _hToken: Address,
    _referral: string,
    _signature: Bytes
  ): Controller__getBorrowFeePerMarketResult {
    let result = super.call(
      "getBorrowFeePerMarket",
      "getBorrowFeePerMarket(address,string,bytes):(uint256,bool)",
      [
        ethereum.Value.fromAddress(_hToken),
        ethereum.Value.fromString(_referral),
        ethereum.Value.fromBytes(_signature)
      ]
    );

    return new Controller__getBorrowFeePerMarketResult(
      result[0].toBigInt(),
      result[1].toBoolean()
    );
  }

  try_getBorrowFeePerMarket(
    _hToken: Address,
    _referral: string,
    _signature: Bytes
  ): ethereum.CallResult<Controller__getBorrowFeePerMarketResult> {
    let result = super.tryCall(
      "getBorrowFeePerMarket",
      "getBorrowFeePerMarket(address,string,bytes):(uint256,bool)",
      [
        ethereum.Value.fromAddress(_hToken),
        ethereum.Value.fromString(_referral),
        ethereum.Value.fromBytes(_signature)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Controller__getBorrowFeePerMarketResult(
        value[0].toBigInt(),
        value[1].toBoolean()
      )
    );
  }

  getHypotheticalAccountLiquidity(
    _hToken: Address,
    _account: Address,
    _collateralId: BigInt,
    _redeemTokens: BigInt,
    _borrowAmount: BigInt
  ): Controller__getHypotheticalAccountLiquidityResult {
    let result = super.call(
      "getHypotheticalAccountLiquidity",
      "getHypotheticalAccountLiquidity(address,address,uint256,uint256,uint256):(uint256,uint256,uint256)",
      [
        ethereum.Value.fromAddress(_hToken),
        ethereum.Value.fromAddress(_account),
        ethereum.Value.fromUnsignedBigInt(_collateralId),
        ethereum.Value.fromUnsignedBigInt(_redeemTokens),
        ethereum.Value.fromUnsignedBigInt(_borrowAmount)
      ]
    );

    return new Controller__getHypotheticalAccountLiquidityResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt()
    );
  }

  try_getHypotheticalAccountLiquidity(
    _hToken: Address,
    _account: Address,
    _collateralId: BigInt,
    _redeemTokens: BigInt,
    _borrowAmount: BigInt
  ): ethereum.CallResult<Controller__getHypotheticalAccountLiquidityResult> {
    let result = super.tryCall(
      "getHypotheticalAccountLiquidity",
      "getHypotheticalAccountLiquidity(address,address,uint256,uint256,uint256):(uint256,uint256,uint256)",
      [
        ethereum.Value.fromAddress(_hToken),
        ethereum.Value.fromAddress(_account),
        ethereum.Value.fromUnsignedBigInt(_collateralId),
        ethereum.Value.fromUnsignedBigInt(_redeemTokens),
        ethereum.Value.fromUnsignedBigInt(_borrowAmount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Controller__getHypotheticalAccountLiquidityResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt()
      )
    );
  }

  getMarketData(_hToken: Address): Controller__getMarketDataResult {
    let result = super.call(
      "getMarketData",
      "getMarketData(address):(bool,uint256,uint256)",
      [ethereum.Value.fromAddress(_hToken)]
    );

    return new Controller__getMarketDataResult(
      result[0].toBoolean(),
      result[1].toBigInt(),
      result[2].toBigInt()
    );
  }

  try_getMarketData(
    _hToken: Address
  ): ethereum.CallResult<Controller__getMarketDataResult> {
    let result = super.tryCall(
      "getMarketData",
      "getMarketData(address):(bool,uint256,uint256)",
      [ethereum.Value.fromAddress(_hToken)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Controller__getMarketDataResult(
        value[0].toBoolean(),
        value[1].toBigInt(),
        value[2].toBigInt()
      )
    );
  }

  getReferralBorrowFeePerMarket(_hToken: Address): BigInt {
    let result = super.call(
      "getReferralBorrowFeePerMarket",
      "getReferralBorrowFeePerMarket(address):(uint256)",
      [ethereum.Value.fromAddress(_hToken)]
    );

    return result[0].toBigInt();
  }

  try_getReferralBorrowFeePerMarket(
    _hToken: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getReferralBorrowFeePerMarket",
      "getReferralBorrowFeePerMarket(address):(uint256)",
      [ethereum.Value.fromAddress(_hToken)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getRoleMember(role: Bytes, index: BigInt): Address {
    let result = super.call(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );

    return result[0].toAddress();
  }

  try_getRoleMember(role: Bytes, index: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRoleMemberCount(role: Bytes): BigInt {
    let result = super.call(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );

    return result[0].toBigInt();
  }

  try_getRoleMemberCount(role: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isActionPaused(_hToken: Address, _target: BigInt): boolean {
    let result = super.call(
      "isActionPaused",
      "isActionPaused(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(_hToken),
        ethereum.Value.fromUnsignedBigInt(_target)
      ]
    );

    return result[0].toBoolean();
  }

  try_isActionPaused(
    _hToken: Address,
    _target: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isActionPaused",
      "isActionPaused(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(_hToken),
        ethereum.Value.fromUnsignedBigInt(_target)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  marketExists(_hToken: Address): boolean {
    let result = super.call("marketExists", "marketExists(address):(bool)", [
      ethereum.Value.fromAddress(_hToken)
    ]);

    return result[0].toBoolean();
  }

  try_marketExists(_hToken: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("marketExists", "marketExists(address):(bool)", [
      ethereum.Value.fromAddress(_hToken)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  marketPausedInfo(param0: Address): Controller__marketPausedInfoResult {
    let result = super.call(
      "marketPausedInfo",
      "marketPausedInfo(address):(bool,bool,bool,bool,bool,bool,bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new Controller__marketPausedInfoResult(
      result[0].toBoolean(),
      result[1].toBoolean(),
      result[2].toBoolean(),
      result[3].toBoolean(),
      result[4].toBoolean(),
      result[5].toBoolean(),
      result[6].toBoolean()
    );
  }

  try_marketPausedInfo(
    param0: Address
  ): ethereum.CallResult<Controller__marketPausedInfoResult> {
    let result = super.tryCall(
      "marketPausedInfo",
      "marketPausedInfo(address):(bool,bool,bool,bool,bool,bool,bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Controller__marketPausedInfoResult(
        value[0].toBoolean(),
        value[1].toBoolean(),
        value[2].toBoolean(),
        value[3].toBoolean(),
        value[4].toBoolean(),
        value[5].toBoolean(),
        value[6].toBoolean()
      )
    );
  }

  oracle(_hToken: Address): Address {
    let result = super.call("oracle", "oracle(address):(address)", [
      ethereum.Value.fromAddress(_hToken)
    ]);

    return result[0].toAddress();
  }

  try_oracle(_hToken: Address): ethereum.CallResult<Address> {
    let result = super.tryCall("oracle", "oracle(address):(address)", [
      ethereum.Value.fromAddress(_hToken)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  referralSigner(): Address {
    let result = super.call("referralSigner", "referralSigner():(address)", []);

    return result[0].toAddress();
  }

  try_referralSigner(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "referralSigner",
      "referralSigner():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  supportsInterface(_interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(_interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(_interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(_interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  underlyingExistsInMarkets(_underlying: Address): boolean {
    let result = super.call(
      "underlyingExistsInMarkets",
      "underlyingExistsInMarkets(address):(bool)",
      [ethereum.Value.fromAddress(_underlying)]
    );

    return result[0].toBoolean();
  }

  try_underlyingExistsInMarkets(
    _underlying: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "underlyingExistsInMarkets",
      "underlyingExistsInMarkets(address):(bool)",
      [ethereum.Value.fromAddress(_underlying)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  version(): BigInt {
    let result = super.call("version", "version():(uint256)", []);

    return result[0].toBigInt();
  }

  try_version(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("version", "version():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class _pauseComponentCall extends ethereum.Call {
  get inputs(): _pauseComponentCall__Inputs {
    return new _pauseComponentCall__Inputs(this);
  }

  get outputs(): _pauseComponentCall__Outputs {
    return new _pauseComponentCall__Outputs(this);
  }
}

export class _pauseComponentCall__Inputs {
  _call: _pauseComponentCall;

  constructor(call: _pauseComponentCall) {
    this._call = call;
  }

  get _hToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _state(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }

  get _target(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class _pauseComponentCall__Outputs {
  _call: _pauseComponentCall;

  constructor(call: _pauseComponentCall) {
    this._call = call;
  }
}

export class _pauseControllerCall extends ethereum.Call {
  get inputs(): _pauseControllerCall__Inputs {
    return new _pauseControllerCall__Inputs(this);
  }

  get outputs(): _pauseControllerCall__Outputs {
    return new _pauseControllerCall__Outputs(this);
  }
}

export class _pauseControllerCall__Inputs {
  _call: _pauseControllerCall;

  constructor(call: _pauseControllerCall) {
    this._call = call;
  }

  get _state(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class _pauseControllerCall__Outputs {
  _call: _pauseControllerCall;

  constructor(call: _pauseControllerCall) {
    this._call = call;
  }
}

export class _removeMarketCall extends ethereum.Call {
  get inputs(): _removeMarketCall__Inputs {
    return new _removeMarketCall__Inputs(this);
  }

  get outputs(): _removeMarketCall__Outputs {
    return new _removeMarketCall__Outputs(this);
  }
}

export class _removeMarketCall__Inputs {
  _call: _removeMarketCall;

  constructor(call: _removeMarketCall) {
    this._call = call;
  }

  get _hToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class _removeMarketCall__Outputs {
  _call: _removeMarketCall;

  constructor(call: _removeMarketCall) {
    this._call = call;
  }
}

export class _setBorrowFeePerMarketCall extends ethereum.Call {
  get inputs(): _setBorrowFeePerMarketCall__Inputs {
    return new _setBorrowFeePerMarketCall__Inputs(this);
  }

  get outputs(): _setBorrowFeePerMarketCall__Outputs {
    return new _setBorrowFeePerMarketCall__Outputs(this);
  }
}

export class _setBorrowFeePerMarketCall__Inputs {
  _call: _setBorrowFeePerMarketCall;

  constructor(call: _setBorrowFeePerMarketCall) {
    this._call = call;
  }

  get _market(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _fee(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _referralFee(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class _setBorrowFeePerMarketCall__Outputs {
  _call: _setBorrowFeePerMarketCall;

  constructor(call: _setBorrowFeePerMarketCall) {
    this._call = call;
  }
}

export class _setFactorsCall extends ethereum.Call {
  get inputs(): _setFactorsCall__Inputs {
    return new _setFactorsCall__Inputs(this);
  }

  get outputs(): _setFactorsCall__Outputs {
    return new _setFactorsCall__Outputs(this);
  }
}

export class _setFactorsCall__Inputs {
  _call: _setFactorsCall;

  constructor(call: _setFactorsCall) {
    this._call = call;
  }

  get _hToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _newLTVFactorMantissa(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _newCollateralFactorMantissa(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class _setFactorsCall__Outputs {
  _call: _setFactorsCall;

  constructor(call: _setFactorsCall) {
    this._call = call;
  }
}

export class _setMarketBorrowCapsCall extends ethereum.Call {
  get inputs(): _setMarketBorrowCapsCall__Inputs {
    return new _setMarketBorrowCapsCall__Inputs(this);
  }

  get outputs(): _setMarketBorrowCapsCall__Outputs {
    return new _setMarketBorrowCapsCall__Outputs(this);
  }
}

export class _setMarketBorrowCapsCall__Inputs {
  _call: _setMarketBorrowCapsCall;

  constructor(call: _setMarketBorrowCapsCall) {
    this._call = call;
  }

  get _hTokens(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _newBorrowCaps(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class _setMarketBorrowCapsCall__Outputs {
  _call: _setMarketBorrowCapsCall;

  constructor(call: _setMarketBorrowCapsCall) {
    this._call = call;
  }
}

export class _setPriceOracleCall extends ethereum.Call {
  get inputs(): _setPriceOracleCall__Inputs {
    return new _setPriceOracleCall__Inputs(this);
  }

  get outputs(): _setPriceOracleCall__Outputs {
    return new _setPriceOracleCall__Outputs(this);
  }
}

export class _setPriceOracleCall__Inputs {
  _call: _setPriceOracleCall;

  constructor(call: _setPriceOracleCall) {
    this._call = call;
  }

  get _hToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _newOracle(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class _setPriceOracleCall__Outputs {
  _call: _setPriceOracleCall;

  constructor(call: _setPriceOracleCall) {
    this._call = call;
  }
}

export class _setReferralSignerCall extends ethereum.Call {
  get inputs(): _setReferralSignerCall__Inputs {
    return new _setReferralSignerCall__Inputs(this);
  }

  get outputs(): _setReferralSignerCall__Outputs {
    return new _setReferralSignerCall__Outputs(this);
  }
}

export class _setReferralSignerCall__Inputs {
  _call: _setReferralSignerCall;

  constructor(call: _setReferralSignerCall) {
    this._call = call;
  }

  get _newSigner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class _setReferralSignerCall__Outputs {
  _call: _setReferralSignerCall;

  constructor(call: _setReferralSignerCall) {
    this._call = call;
  }
}

export class _supportMarketCall extends ethereum.Call {
  get inputs(): _supportMarketCall__Inputs {
    return new _supportMarketCall__Inputs(this);
  }

  get outputs(): _supportMarketCall__Outputs {
    return new _supportMarketCall__Outputs(this);
  }
}

export class _supportMarketCall__Inputs {
  _call: _supportMarketCall;

  constructor(call: _supportMarketCall) {
    this._call = call;
  }

  get _hToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class _supportMarketCall__Outputs {
  _call: _supportMarketCall;

  constructor(call: _supportMarketCall) {
    this._call = call;
  }
}

export class BorrowAllowedCall extends ethereum.Call {
  get inputs(): BorrowAllowedCall__Inputs {
    return new BorrowAllowedCall__Inputs(this);
  }

  get outputs(): BorrowAllowedCall__Outputs {
    return new BorrowAllowedCall__Outputs(this);
  }
}

export class BorrowAllowedCall__Inputs {
  _call: BorrowAllowedCall;

  constructor(call: BorrowAllowedCall) {
    this._call = call;
  }

  get _hToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _borrower(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _collateralId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _borrowAmount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class BorrowAllowedCall__Outputs {
  _call: BorrowAllowedCall;

  constructor(call: BorrowAllowedCall) {
    this._call = call;
  }
}

export class DepositCollateralAllowedCall extends ethereum.Call {
  get inputs(): DepositCollateralAllowedCall__Inputs {
    return new DepositCollateralAllowedCall__Inputs(this);
  }

  get outputs(): DepositCollateralAllowedCall__Outputs {
    return new DepositCollateralAllowedCall__Outputs(this);
  }
}

export class DepositCollateralAllowedCall__Inputs {
  _call: DepositCollateralAllowedCall;

  constructor(call: DepositCollateralAllowedCall) {
    this._call = call;
  }

  get _hToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _depositor(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _collateralId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class DepositCollateralAllowedCall__Outputs {
  _call: DepositCollateralAllowedCall;

  constructor(call: DepositCollateralAllowedCall) {
    this._call = call;
  }
}

export class DepositUnderlyingAllowedCall extends ethereum.Call {
  get inputs(): DepositUnderlyingAllowedCall__Inputs {
    return new DepositUnderlyingAllowedCall__Inputs(this);
  }

  get outputs(): DepositUnderlyingAllowedCall__Outputs {
    return new DepositUnderlyingAllowedCall__Outputs(this);
  }
}

export class DepositUnderlyingAllowedCall__Inputs {
  _call: DepositUnderlyingAllowedCall;

  constructor(call: DepositUnderlyingAllowedCall) {
    this._call = call;
  }

  get _hToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _depositor(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class DepositUnderlyingAllowedCall__Outputs {
  _call: DepositUnderlyingAllowedCall;

  constructor(call: DepositUnderlyingAllowedCall) {
    this._call = call;
  }
}

export class EnterMarketsCall extends ethereum.Call {
  get inputs(): EnterMarketsCall__Inputs {
    return new EnterMarketsCall__Inputs(this);
  }

  get outputs(): EnterMarketsCall__Outputs {
    return new EnterMarketsCall__Outputs(this);
  }
}

export class EnterMarketsCall__Inputs {
  _call: EnterMarketsCall;

  constructor(call: EnterMarketsCall) {
    this._call = call;
  }

  get _hTokens(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class EnterMarketsCall__Outputs {
  _call: EnterMarketsCall;

  constructor(call: EnterMarketsCall) {
    this._call = call;
  }
}

export class ExitMarketCall extends ethereum.Call {
  get inputs(): ExitMarketCall__Inputs {
    return new ExitMarketCall__Inputs(this);
  }

  get outputs(): ExitMarketCall__Outputs {
    return new ExitMarketCall__Outputs(this);
  }
}

export class ExitMarketCall__Inputs {
  _call: ExitMarketCall;

  constructor(call: ExitMarketCall) {
    this._call = call;
  }

  get _hToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ExitMarketCall__Outputs {
  _call: ExitMarketCall;

  constructor(call: ExitMarketCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}
